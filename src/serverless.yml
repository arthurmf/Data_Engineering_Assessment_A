# "service" is the name of this project. This will also be added to your AWS resource names.
service: etl

frameworkVersion: '4'

provider:
  name: aws
  profile: ${env:AWS_PROFILE}
  runtime: python3.12
  stage: ${opt:stage, 'dev'}
  memorySize: 512
  deploymentBucket:
    name: de-challenge-sls-deployment-bucket
    serverSideEncryption: AES256
  environment:
    BUCKET_NAME: ${env:BUCKET_NAME}
    STAGE: ${env:ENVIRONMENT}
    POWERTOOLS_SERVICE_NAME: etl
    POWERTOOLS_LOG_LEVEL: INFO

package:
  individually: true
  patterns:
    - '!data-source/**'
    - '!node_modules/**'

functions:
  hello:
    handler: handler.etl
    layers:
      - arn:aws:lambda:us-east-1:017000801446:layer:AWSLambdaPowertoolsPythonV3-python312-x86:1
      - arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python312:13
    events:
      - s3: # So lambda can be triggered when object is created at S3 defined path
          bucket: ${self:provider.environment.BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - prefix: data-source/
          existing: true    
    iamRoleStatements:
      - Effect: Allow
        Action:
          - s3:GetObject
          - s3:ListBucket
        Resource:
          - "arn:aws:s3:::${self:provider.environment.BUCKET_NAME}/*"
          - "arn:aws:s3:::${self:provider.environment.BUCKET_NAME}"

plugins:
  - serverless-deployment-bucket # Allow always deploy at the same bucket
  - serverless-iam-roles-per-function # Allow creating IAM roles per function